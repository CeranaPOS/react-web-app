# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: React CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [closed]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
#         node-version: [12.x, 14.x, 16.x]
          node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    
    # Test current directory
    - name: Test current directory
      run: ls -la
        
    # Test current directory
    - name: Test current directory
      run: pwd

#     
#     - name: Deploy to Server
#       uses: garygrossgarten/github-action-scp@release
#       with:
#         local: 'build'
#         remote: ${{ secrets.TARGET }}
#         host: ${{ secrets.HOST }}
#         port: ${{ secrets.PORT }}
#         username: ${{ secrets.USERNAME }}
#         privateKey: ${{ secrets.KEY }}
#
    - name: Deploy to Staging server
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.KEY }}
        ARGS: "-rltgoDzvO"
        SOURCE: "build/"
        REMOTE_HOST: ${{ secrets.HOST }}
        REMOTE_USER: ${{ secrets.USERNAME }}
        REMOTE_PORT: ${{ secrets.PORT }}
        TARGET: ${{ secrets.TARGET }}
#         EXCLUDE: "/dist/, /node_modules/"

#     - name: executing remote ssh commands
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.HOST }}
#         username: ${{ secrets.USERNAME }}
#         key: ${{ secrets.KEY }}
#         port: ${{ secrets.PORT }}
#         script: chmod 744 -R ${{ secrets.CSS }}
